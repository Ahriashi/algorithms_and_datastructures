Сложность бинарного поиска f(n) = ?\pause
\begin{lstlisting}[language=C++]
int[7] arr = { 2,5,6,15,21,23,25 };
int* arr_ptr = &arr[0];
int n = 7;
int ans_i = BinarySearch( arr_ptr, n, 2 );
\end{lstlisting}
\begin{center}
\begin{tikzpicture}
  \draw (-2.75, 0.8) node[scale=1, ] {0};
  \draw (-2.75, 0.3) node[scale=1, ] {2};
  \draw (-3,0) rectangle (-2.5, 0.6);

  \draw (-2.25, 0.8) node[scale=1, ] {1};
  \draw (-2.25, 0.3) node[scale=1, ] {5};
  \draw (-2.5,0) rectangle (-2, 0.6);

  \draw (-1.75, 0.8) node[scale=1, ] {2};
  \draw (-1.75, 0.3) node[scale=1, ] {6};
  \draw (-2,0) rectangle (-1.5, 0.6);

  \draw (-1.25, 0.8) node[scale=1, ] {3};
  \draw (-1.25, 0.3) node[scale=1, ] {15};
  \draw (-1.5,0) rectangle (-1, 0.6);

  \draw (-0.75, 0.8) node[scale=1, ] {4};
  \draw (-0.75, 0.3) node[scale=1, ] {21};
  \draw (-1,0) rectangle (-0.5, 0.6);

  \draw (-0.25, 0.8) node[scale=1, ] {5};
  \draw (-0.25, 0.3) node[scale=1, ] {23};
  \draw (-0.5,0) rectangle (0, 0.6);

  \draw (0.25, 0.8) node[scale=1, ] {6};
  \draw (0.25, 0.3) node[scale=1, ] {25};
  \draw (0,0) rectangle (0.5, 0.6);
  %\draw (-1,0.6) rectangle (1, 0.6);
  %\draw (-2.1,0.3) node[scale=1.5, color=blue] {0100};
  %\draw [dashed] (1, 1.8) -- (1.4, 2.2);
  %\draw (-1.4, -0.5) node[scale=0.7] {points-to};
  %\draw (-1.4, -1) node[scale=1.2] {RAM - random access memory};



\end{tikzpicture}
\end{center}

